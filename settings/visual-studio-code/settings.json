// Place your settings in this file to overwrite the default settings
{
  // Controls the font family.
  "editor.fontFamily": "{{ pillar.fonts.normal.family }}",

  // Controls the font size in pixels.
  "editor.fontSize": {{ pillar.fonts.size }},

  // Enables/Disables font ligatures.
  "editor.fontLigatures": true,

  // Controls whether the minimap is shown.
  "editor.minimap.enabled": true,

  // Do not render the actual characters on a line, instead show color blocks.
  "editor.minimap.renderCharacters": false,

  // Controls whether the editor should detect links and make them clickable.
  "editor.links": true,

  // The modifier to be used to add multiple cursors with the mouse.
  "editor.multiCursorModifier": "alt",

  // When enabled, automatically installs updates for extensions.
  "extensions.autoUpdate": true,

  // Disables update Toc on save.
  "markdown.extension.toc.updateOnSave": false,

  // Customizes which terminal application to run on macOS.
  "terminal.external.osxExec": "iTerm.app",

  // Auto detect color scheme
  "window.autoDetectColorScheme": false,

  // Preferred Dark Color Theme
  "workbench.preferredDarkColorTheme": "GitHub Dark",

  // Preferred Light Color Theme
  "workbench.preferredLightColorTheme": "GitHub Light",

  // Specifies the color theme used in the workbench.
  "workbench.colorTheme": "GitHub Dark",

  // Specifies the icon theme used in the workbench or 'null' to not show any file icons.
  "workbench.iconTheme": "Monokai Pro Icons",

  //  Confirm before syncrhronizing git repositories.
  "git.confirmSync": false,

  // Whether auto fetching is enabled.
  "git.autofetch": true,

  // If set to true, the new version message won't be shown anymore for Vsicons
  "vsicons.dontShowNewVersionMessage": true,

  // Controls whether the explorer should ask for confirmation to move files
  // and folders via drag and drop.
  "explorer.confirmDragAndDrop": false,

  // The number of spaces a tab is equal to. This setting is overriden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.tabSize": 4,

  // Insert spaces when pressing Tab. This setting is overriden
  // based on the file contents when `editor.detectIndentation` is true.
  "editor.insertSpaces": true,

  // When opening a file, `editor.tabSize` and `editor.insertSpaces`
  // will be detected based on the file contents. Set to false to keep
  // the values you've explicitly set, above.
  "editor.detectIndentation": true,

  // Controls whether the editor should render indent guides.
  "editor.renderIndentGuides": false,

  // When enabled, will trim all new lines after the final new line at the end
  // of the file when saving it.
  "files.trimFinalNewlines": true,

  // When enabled, will trim trailling whitespace when saving a file.
  "files.trimTrailingWhitespace": true,

  // Controls the position of the editor's tabs close buttons, or disables them when set to 'off'.
  "workbench.editor.tabCloseButton": "left",

  // Your GitLab instance URL
  "gitlab.instanceUrl": "https://{{ pillar.git.gitlab.url }}",

  // Show notification in VSCode when pipeline status change
  "gitlab.showPipelineUpdateNotifications": true,

  // Enables commit signing with GPG
  "git.enableCommitSigning": true,

  // Lint Python code using pylint
  "python.linting.enabled": true,

  // Python interpreter
  "python.pythonPath": "/usr/local/bin/python3",

  // Visual Studio Code Python Server
  "python.languageServer": "Pylance",

  // Don't ask for Jupyter Notebook restart
  "python.dataScience.askForKernelRestart": false,

  // Python formatting provider
  "python.formatting.provider": "yapf",

  // Template for Docstring Python documentation
  "autoDocstring.docstringFormat": "google",

  // Visual Studio IntelliCode
  "editor.suggestSelection": "first",

  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  // Controls the font family of the terminal
  "terminal.integrated.fontFamily": "{{ pillar.fonts.nerd.family }}",

  // Controls the font size in pixels of the terminal
  "terminal.integrated.fontSize": {{ pillar.fonts.size }},

  // Change Terminal cursor style
  "terminal.integrated.cursorStyle": "line",

  // Enable terminal cursor blinking
  "terminal.integrated.cursorBlinking": true,

  // Increase terminal scrollback history
  "terminal.integrated.scrollback": 50000,

  // Semantic highlighting enriches syntax coloring based on symbol information from the language service.
  "editor.semanticTokenColorCustomizations": {
    "enabled": true
  },

  // Start documentation in a new line
  "autoDocstring.startOnNewLine": true,

  // List of remotes, by name, to fetch pull requests from
  "githubPullRequests.remotes": [
    "origin",
    "upstream",
    "github"
  ],

  // Do not ignore extensions recomendations
  "extensions.ignoreRecommendations": false,

  // Don't Format code on save
  "editor.formatOnSave": false,

  // Do not focus window on break
  "debug.focusWindowOnBreak": false,

  // Dockerfile formatter
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },

  // Markdown formatter
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Ruby Code completion
  "ruby.codeCompletion": "rcodetools",

  // Ruby Format tool
  "ruby.format": "rubocop",

  // Ruby Intellisense
  "ruby.intellisense": "rubyLocate",

  // Where Ruby tools should be started using Bundler
  "ruby.useBundler": true,

  // Ruby Lint settings
  "ruby.lint": {
    "rubocop": {
      "useBundler": true
    }
  },

  // Sort LaTeX references by author
  "latex-workshop.bibtex-format.sort.enabled": true,
  "latex-workshop.bibtex-format.sortby": [
    "author"
  ],

  // LaTeX tools
  "latex-workshop.latex.tools": [

    {
      "name": "latexmk",
      "command": "latexmk",
      "args": [
        "--shell-escape",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-pdf",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "lualatexmk",
      "command": "latexmk",
      "args": [
        "--shell-escape",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-lualatex",
        "-outdir=%OUTDIR%",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "latexmk_rconly",
      "command": "latexmk",
      "args": [
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "pdflatex",
      "command": "pdflatex",
      "args": [
        "--shell-escape",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "%DOC%"
      ],
      "env": {}
    },
    {
      "name": "bibtex",
      "command": "bibtex",
      "args": [
        "%DOCFILE%"
      ],
      "env": {}
    },
    {
      "name": "rnw2tex",
      "command": "Rscript",
      "args": [
        "-e",
        "knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"
      ],
      "env": {}
    },
    {
      "name": "jnw2tex",
      "command": "julia",
      "args": [
        "-e",
        "using Weave; weave(\"%DOC_EXT%\", doctype=\"tex\")"
      ],
      "env": {}
    },
    {
      "name": "jnw2texmintex",
      "command": "julia",
      "args": [
        "-e",
        "using Weave; weave(\"%DOC_EXT%\", doctype=\"texminted\")"
      ],
      "env": {}
    }
  ],

  // JSON formatter
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  }
}
